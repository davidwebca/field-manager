/*! js-cookie v2.2.1 | MIT */
!function(e){var t;if("function"==typeof define&&define.amd&&(define(e),t=!0),"object"==typeof exports&&(module.exports=e(),t=!0),!t){var i=window.Cookies,n=window.Cookies=e();n.noConflict=function(){return window.Cookies=i,n}}}((function(){function e(){for(var e=0,t={};e<arguments.length;e++){var i=arguments[e];for(var n in i)t[n]=i[n]}return t}function t(e){return e.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent)}function i(n){function a(){}function s(t,i,s){if("undefined"!=typeof document){"number"==typeof(s=e({path:"/"},a.defaults,s)).expires&&(s.expires=new Date(1*new Date+864e5*s.expires)),s.expires=s.expires?s.expires.toUTCString():"";try{var r=JSON.stringify(i);/^[\{\[]/.test(r)&&(i=r)}catch(e){}i=n.write?n.write(i,t):encodeURIComponent(i+"").replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),t=encodeURIComponent(t+"").replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\(\)]/g,escape);var d="";for(var o in s)s[o]&&(d+="; "+o,!0!==s[o]&&(d+="="+s[o].split(";")[0]));return document.cookie=t+"="+i+d}}function r(e,i){if("undefined"!=typeof document){for(var a={},s=document.cookie?document.cookie.split("; "):[],r=0;r<s.length;r++){var d=s[r].split("="),o=d.slice(1).join("=");i||'"'!==o.charAt(0)||(o=o.slice(1,-1));try{var l=t(d[0]);if(o=(n.read||n)(o,l)||t(o),i)try{o=JSON.parse(o)}catch(e){}if(a[l]=o,e===l)break}catch(e){}}return e?a[e]:a}}return a.set=s,a.get=function(e){return r(e,!1)},a.getJSON=function(e){return r(e,!0)},a.remove=function(t,i){s(t,"",e(i,{expires:-1}))},a.defaults={},a.withConverter=i,a}return i((function(){}))})),$((function(){$(document).on("click",'input[type="submit"]',(function(e){e.preventDefault();var t=$(this).parents("form");$(this).attr("data-action")&&$(t).find('input[name="action"]').val($(this).attr("data-action")),$(t).submit()})),$(document).on("change","select#importAll",(function(e){e.preventDefault(),$("#fieldmapping .importSelect select").val($(this).val());var t="noimport"==$(this).val()?"noimport":"include";$("#fieldmapping .importSelectNested select").val(t)})),$(document).on("change",".select-type-matrix select, .select-type-neo select, .select-type-super-table select",(function(e){e.preventDefault();var t=$(this).parents("tr").data("row-id"),i="noimport"==$(this).val()?"noimport":"include";$('tr[data-row-id="'+t+'"].row-blocktype .importSelectNested select').val(i),$('tr[data-row-id="'+t+'"].row-blocktype-field .importSelectNested select').val(i)})),$(document).on("change",".select-blocktype select",(function(e){e.preventDefault();var t=$(this).parents("tr").data("row-id"),i=$(this).parents("tr").data("blocktype-id"),n="noimport"==$(this).val()?"noimport":"include";$('tr[data-row-id="'+t+'"][data-blocktype-id="'+i+'"].row-blocktype-field .importSelectNested select').val(n)})),$(document).on("change","tr.group .field .checkbox",(function(e){e.preventDefault();var t=$(this).parents("tr.group").data("groupid"),i=$('tr.field[data-groupid="'+t+'"] .field .checkbox');$(this).hasClass("hasChecked")?($(this).removeClass("hasChecked"),i.prop("checked",!1)):($(this).addClass("hasChecked"),i.prop("checked",!0))})),$(document).on("change","#fieldmanager .checkbox",(function(e){e.preventDefault(),$("#fieldmanager .checkbox:checked").length>0?$(".export-btn").removeClass("disabled").prop("disabled",!1):$(".export-btn").addClass("disabled").prop("disabled",!0)})),$("tr.field .clone-btn").on("click",(function(e){new Craft.FieldManager.CloneField($(this),$(this).parents("tr.field"))})),$("tr.field .go a").on("click",(function(e){e.metaKey||(e.preventDefault(),new Craft.FieldManager.EditField($(this),$(this).parents("tr.field")))})),$(".new-field-btn").on("click",(function(e){e.metaKey||(e.preventDefault(),new Craft.FieldManager.EditField($(this),$(this)))}))})),void 0===Craft.FieldManager&&(Craft.FieldManager={}),$((function(){Craft.FieldManager.HandleGeneratorWithSuffix=Craft.BaseInputGenerator.extend({generateTargetValue:function(e){var t=e.replace("/<(.*?)>/g","");t=(t=t.replace(/['"‘’“”\[\]\(\)\{\}:]/g,"")).toLowerCase(),t=(t=Craft.asciiString(t)).replace(/^[^a-z]+/,"");var i=Craft.filterArray(t.split(/[^a-z0-9]+/));t="";for(var n=0;n<i.length;n++)t+=0===n?i[n]:i[n].charAt(0).toUpperCase()+i[n].substr(1);return t+"_"}});var e={setValue:function(t,i,n){if(t.length){var a=t.shift();return a?(n[a]=e.setValue(t,i,n[a]||{}),n):n.push?(n.push(i),n):[i]}return i}};$.fn.serializeObject=function(){var t={},i=this.serializeArray(),n=null;return $.each(i,(function(){n=this.name.replace(/\]/g,"").split(/\[/),e.setValue(n,this.value,t)})),t}})),void 0===Craft.FieldManager&&(Craft.FieldManager={}),$((function(){Craft.FieldManager.CloneField=Garnish.Modal.extend({fieldId:null,$body:null,$element:null,$buttons:null,$cancelBtn:null,$saveBtn:null,$footerSpinner:null,init:function(e,t){this.$element=e,this.fieldId=t.data("id");var i=$('<div class="modal fieldsettingsmodal"></div>').appendTo(Garnish.$bod),n=$('<div class="body"><div class="spinner big"></div></div>').appendTo(i),a=$('<div class="footer"/>').appendTo(i);this.base(i,this.settings),this.$footerSpinner=$('<div class="spinner hidden"/>').appendTo(a),this.$buttons=$('<div class="buttons rightalign first"/>').appendTo(a),this.$cancelBtn=$('<div class="btn">'+Craft.t("field-manager","Cancel")+"</div>").appendTo(this.$buttons),this.fieldId?this.$saveBtn=$('<div class="btn submit">'+Craft.t("field-manager","Clone")+"</div>").appendTo(this.$buttons):this.$saveBtn=$('<div class="btn submit">'+Craft.t("field-manager","Add field")+"</div>").appendTo(this.$buttons),this.$body=n,this.addListener(this.$cancelBtn,"activate","onFadeOut"),this.addListener(this.$saveBtn,"activate","saveSettings")},onFadeIn:function(){var e={fieldId:this.fieldId};Craft.sendActionRequest("POST","field-manager/base/get-field-modal-body",{data:e}).then((e=>{this.$body.html(e.data.html),Craft.appendHeadHtml(e.data.headHtml),Craft.appendBodyHtml(e.data.footHtml),Craft.initUiElements(this.$body),new Craft.HandleGenerator("#name","#handle")})),this.base()},onFadeOut:function(){this.hide(),this.destroy(),this.$shade.remove(),this.$container.remove(),this.removeListener(this.$saveBtn,"click"),this.removeListener(this.$cancelBtn,"click")},saveSettings:function(){var e=this.$body.find("form").serializeObject();e.fieldId=this.fieldId,this.$footerSpinner.removeClass("hidden"),Craft.sendActionRequest("POST","field-manager/base/clone-field",{data:e}).then((e=>{Craft.cp.displayNotice(Craft.t("field-manager","Field cloned.")),location.href=Craft.getUrl("field-manager"),this.onFadeOut()})).catch((({response:e})=>{e&&e.data&&e.data.message?Craft.cp.displayError(e.data.message):Craft.cp.displayError()})).finally((()=>{this.$footerSpinner.addClass("hidden")})),this.removeListener(this.$saveBtn,"click"),this.removeListener(this.$cancelBtn,"click")},show:function(){this.base()}}),Craft.FieldManager.EditField=Garnish.Modal.extend({fieldId:null,$body:null,$form:null,$element:null,$buttons:null,$cancelBtn:null,$saveBtn:null,$footerSpinner:null,init:function(e,t){this.$element=e,t&&(this.fieldId=t.data("id"));var i=$('<div class="modal fieldsettingsmodal"></div>').appendTo(Garnish.$bod),n=$('<div class="body"><div class="spinner big"></div></div>').appendTo(i),a=$('<div class="footer"/>').appendTo(i);this.base(i,this.settings),this.$footerSpinner=$('<div class="spinner hidden"/>').appendTo(a),this.$buttons=$('<div class="buttons rightalign first"/>').appendTo(a),this.$cancelBtn=$('<div class="btn">'+Craft.t("field-manager","Cancel")+"</div>").appendTo(this.$buttons),this.$saveBtn=$('<div class="btn submit">'+Craft.t("field-manager","Save")+"</div>").appendTo(this.$buttons),this.$body=n,this.addListener(this.$cancelBtn,"activate","onFadeOut"),this.addListener(this.$saveBtn,"activate","saveSettings")},onFormSubmit:function(e){e.preventDefault()},onFadeIn:function(){var e={fieldId:this.fieldId};Craft.sendActionRequest("POST","field-manager/base/get-field-modal-body",{data:e}).then((e=>{this.$body.html(e.data.html),Craft.appendHeadHtml(e.data.headHtml),Craft.appendBodyHtml(e.data.footHtml),Craft.initUiElements(this.$body),this.$form=this.$body.find("form"),this.addListener(this.$form,"submit","onFormSubmit")})),this.base()},onFadeOut:function(){this.hide(),this.destroy(),this.$shade.remove(),this.$container.remove(),this.removeListener(this.$saveBtn,"click"),this.removeListener(this.$cancelBtn,"click")},saveSettings:function(){this.$form.trigger("submit"),this.$footerSpinner.removeClass("hidden");var e=this.$form.serialize();Craft.sendActionRequest("POST","field-manager/base/save-field",{data:e}).then((e=>{Craft.cp.displayNotice(Craft.t("field-manager","Field updated.")),location.href=Craft.getUrl("field-manager"),this.onFadeOut()})).catch((({response:e})=>{Garnish.shake(this.$container),e&&e.data&&e.data.message?Craft.cp.displayError(e.data.message):Craft.cp.displayError()})).finally((()=>{this.$footerSpinner.addClass("hidden")})),this.removeListener(this.$saveBtn,"click"),this.removeListener(this.$cancelBtn,"click")},show:function(){this.base()}})}));
//# sourceMappingURL=field-manager.js.map